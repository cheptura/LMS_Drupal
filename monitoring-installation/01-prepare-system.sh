#!/bin/bash

# RTTI Monitoring - –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
# –°–µ—Ä–≤–µ—Ä—ã: lms.rtti.tj (92.242.60.172) + library.rtti.tj (92.242.61.204)

echo "=== RTTI Monitoring - –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ ==="
echo "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è RTTI"
echo "üìÖ –î–∞—Ç–∞: $(date)"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root"
    exit 1
fi

echo "1. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
SERVER_IP=$(hostname -I | awk '{print $1}')
if [[ "$SERVER_IP" == "92.242.60.172" ]]; then
    SERVER_ROLE="moodle"
    SERVER_NAME="lms.rtti.tj"
    echo "üéì –°–µ—Ä–≤–µ—Ä Moodle LMS –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
elif [[ "$SERVER_IP" == "92.242.61.204" ]]; then
    SERVER_ROLE="drupal"
    SERVER_NAME="library.rtti.tj"
    echo "üìö –°–µ—Ä–≤–µ—Ä Drupal Library –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
else
    echo "‚ö†Ô∏è  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä, –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–∞–∫ –æ–±—â–∏–π —Å–µ—Ä–≤–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    SERVER_ROLE="monitoring"
    SERVER_NAME=$(hostname)
fi

echo "2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

echo "3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
apt install -y \
    curl \
    wget \
    gnupg \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    lsb-release \
    jq \
    htop \
    iotop \
    nethogs \
    ncdu \
    tree \
    git

echo "4. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è Prometheus
if ! id "prometheus" &>/dev/null; then
    useradd --no-create-home --shell /bin/false prometheus
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å prometheus —Å–æ–∑–¥–∞–Ω"
fi

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è Node Exporter
if ! id "node_exporter" &>/dev/null; then
    useradd --no-create-home --shell /bin/false node_exporter
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å node_exporter —Å–æ–∑–¥–∞–Ω"
fi

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è Grafana (–µ—Å–ª–∏ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è)
if ! id "grafana" &>/dev/null; then
    useradd --no-create-home --shell /bin/false grafana
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å grafana —Å–æ–∑–¥–∞–Ω"
fi

echo "5. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
mkdir -p /etc/prometheus
mkdir -p /var/lib/prometheus
mkdir -p /etc/alertmanager
mkdir -p /var/lib/alertmanager
mkdir -p /var/log/prometheus
mkdir -p /var/log/grafana
mkdir -p /opt/monitoring

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chown prometheus:prometheus /etc/prometheus
chown prometheus:prometheus /var/lib/prometheus
chown prometheus:prometheus /var/log/prometheus

echo "6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞..."
timedatectl set-timezone Asia/Dushanbe
echo "‚úÖ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: $(timedatectl | grep "Time zone")"

echo "7. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
ufw allow 9090/tcp comment "Prometheus"
ufw allow 3000/tcp comment "Grafana"
ufw allow 9093/tcp comment "Alertmanager"
ufw allow 9100/tcp comment "Node Exporter"

# –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
if [ "$SERVER_ROLE" = "moodle" ]; then
    ufw allow 9117/tcp comment "Moodle Exporter"
    ufw allow 9187/tcp comment "PostgreSQL Exporter"
    ufw allow 9121/tcp comment "Redis Exporter"
elif [ "$SERVER_ROLE" = "drupal" ]; then
    ufw allow 9187/tcp comment "PostgreSQL Exporter"
    ufw allow 9121/tcp comment "Redis Exporter"
    ufw allow 9113/tcp comment "Nginx Exporter"
fi

echo "8. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

apt update
apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

# –ó–∞–ø—É—Å–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ Docker
systemctl start docker
systemctl enable docker

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
usermod -aG docker $USER

echo "9. –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏..."
cat > /opt/monitoring/system-info.sh << EOF
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

echo "=== System Information for Monitoring ==="
echo "Server Role: $SERVER_ROLE"
echo "Server Name: $SERVER_NAME"
echo "Server IP: $SERVER_IP"
echo "Date: \$(date)"
echo "Uptime: \$(uptime -p)"
echo "OS: \$(lsb_release -d | cut -f2)"
echo "Kernel: \$(uname -r)"
echo "CPU: \$(nproc) cores"
echo "Memory: \$(free -h | grep Mem | awk '{print \$2}')"
echo "Disk: \$(df -h / | tail -1 | awk '{print \$2 " total, " \$4 " free"}')"
echo

if [ "$SERVER_ROLE" = "moodle" ]; then
    echo "=== Moodle Services ==="
    systemctl is-active nginx php8.3-fpm postgresql redis-server
elif [ "$SERVER_ROLE" = "drupal" ]; then
    echo "=== Drupal Services ==="
    systemctl is-active nginx php8.3-fpm postgresql redis-server memcached
fi
EOF

chmod +x /opt/monitoring/system-info.sh

echo "10. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ Prometheus..."
cat > /etc/prometheus/prometheus.yml << EOF
# Prometheus configuration for RTTI
# Generated: $(date)

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'rtti'
    server_role: '$SERVER_ROLE'

rule_files:
  - "rtti_alerts.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - localhost:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
        labels:
          server: '$SERVER_NAME'
          role: 'monitoring'

  # Node Exporter
  - job_name: 'node'
    static_configs:
      - targets: ['localhost:9100']
        labels:
          server: '$SERVER_NAME'
          role: '$SERVER_ROLE'

EOF

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
if [ "$SERVER_ROLE" = "moodle" ]; then
    cat >> /etc/prometheus/prometheus.yml << EOF
  # PostgreSQL Exporter for Moodle
  - job_name: 'postgresql-moodle'
    static_configs:
      - targets: ['localhost:9187']
        labels:
          server: '$SERVER_NAME'
          database: 'moodle'

  # Redis Exporter for Moodle
  - job_name: 'redis-moodle'
    static_configs:
      - targets: ['localhost:9121']
        labels:
          server: '$SERVER_NAME'
          service: 'redis'

  # Nginx Exporter for Moodle
  - job_name: 'nginx-moodle'
    static_configs:
      - targets: ['localhost:9113']
        labels:
          server: '$SERVER_NAME'
          service: 'nginx'
EOF

elif [ "$SERVER_ROLE" = "drupal" ]; then
    cat >> /etc/prometheus/prometheus.yml << EOF
  # PostgreSQL Exporter for Drupal
  - job_name: 'postgresql-drupal'
    static_configs:
      - targets: ['localhost:9187']
        labels:
          server: '$SERVER_NAME'
          database: 'drupal_library'

  # Redis Exporter for Drupal
  - job_name: 'redis-drupal'
    static_configs:
      - targets: ['localhost:9121']
        labels:
          server: '$SERVER_NAME'
          service: 'redis'

  # Nginx Exporter for Drupal
  - job_name: 'nginx-drupal'
    static_configs:
      - targets: ['localhost:9113']
        labels:
          server: '$SERVER_NAME'
          service: 'nginx'

  # Memcached Exporter for Drupal
  - job_name: 'memcached-drupal'
    static_configs:
      - targets: ['localhost:9150']
        labels:
          server: '$SERVER_NAME'
          service: 'memcached'
EOF
fi

chown prometheus:prometheus /etc/prometheus/prometheus.yml

echo "11. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –∞–ª–µ—Ä—Ç–∏–Ω–≥–∞..."
cat > /etc/prometheus/rtti_alerts.yml << EOF
# RTTI Alerting Rules
# Generated: $(date)

groups:
  - name: rtti.rules
    rules:
      # –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU –Ω–∞ {{ \$labels.instance }}"
          description: "CPU –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ {{ \$value }}% –±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç"

      # –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –Ω–∞ {{ \$labels.instance }}"
          description: "–ü–∞–º—è—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–∞ {{ \$value }}%"

      # –ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
      - alert: LowDiskSpace
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 85
        for: 5m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "–ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ {{ \$labels.device }} –Ω–∞ {{ \$labels.instance }}"
          description: "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {{ \$value }}% –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞"

      # –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "–°–µ—Ä–≤–∏—Å {{ \$labels.job }} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
          description: "–°–µ—Ä–≤–∏—Å {{ \$labels.job }} –Ω–∞ {{ \$labels.instance }} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –±–æ–ª–µ–µ 1 –º–∏–Ω—É—Ç—ã"
EOF

chown prometheus:prometheus /etc/prometheus/rtti_alerts.yml

echo "12. –°–æ–∑–¥–∞–Ω–∏–µ docker-compose –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
cat > /opt/monitoring/docker-compose.yml << EOF
version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - /etc/prometheus:/etc/prometheus
      - /var/lib/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    user: "$(id -u prometheus):$(id -g prometheus)"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - /etc/alertmanager:/etc/alertmanager
      - /var/lib/alertmanager:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - /var/log/grafana:/var/log/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123!RTTI
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=$SERVER_NAME
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=localhost:587
      - GF_SMTP_FROM_ADDRESS=monitoring@rtti.tj

volumes:
  grafana-storage:
EOF

echo "13. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º..."
cat > /opt/monitoring/monitoring-control.sh << 'EOF'
#!/bin/bash

case "$1" in
    start)
        echo "–ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        cd /opt/monitoring
        docker compose up -d
        echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω"
        ;;
    stop)
        echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        cd /opt/monitoring
        docker compose down
        echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        ;;
    restart)
        echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
        cd /opt/monitoring
        docker compose restart
        echo "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        ;;
    status)
        echo "–°—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
        cd /opt/monitoring
        docker compose ps
        ;;
    logs)
        echo "–õ–æ–≥–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
        cd /opt/monitoring
        docker compose logs --tail=50 -f
        ;;
    *)
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 {start|stop|restart|status|logs}"
        exit 1
        ;;
esac
EOF

chmod +x /opt/monitoring/monitoring-control.sh

echo "14. –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞..."
cat > /root/monitoring-system-info.txt << EOF
# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ RTTI
# –î–∞—Ç–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏: $(date)
# –°–µ—Ä–≤–µ—Ä: $SERVER_NAME ($SERVER_IP)
# –†–æ–ª—å: $SERVER_ROLE

=== –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê ===
‚úÖ Prometheus (–º–µ—Ç—Ä–∏–∫–∏)
‚úÖ Grafana (–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è)
‚úÖ Alertmanager (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
‚úÖ Node Exporter (—Å–∏—Å—Ç–µ–º–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏)
‚úÖ Docker & Docker Compose

=== –ü–û–†–¢–´ –°–ï–†–í–ò–°–û–í ===
Prometheus: 9090
Grafana: 3000
Alertmanager: 9093
Node Exporter: 9100

=== –§–ê–ô–õ–´ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ===
Prometheus: /etc/prometheus/prometheus.yml
–ê–ª–µ—Ä—Ç—ã: /etc/prometheus/rtti_alerts.yml
Docker Compose: /opt/monitoring/docker-compose.yml

=== –ö–û–ú–ê–ù–î–´ –£–ü–†–ê–í–õ–ï–ù–ò–Ø ===
–ó–∞–ø—É—Å–∫: /opt/monitoring/monitoring-control.sh start
–û—Å—Ç–∞–Ω–æ–≤–∫–∞: /opt/monitoring/monitoring-control.sh stop
–°—Ç–∞—Ç—É—Å: /opt/monitoring/monitoring-control.sh status
–õ–æ–≥–∏: /opt/monitoring/monitoring-control.sh logs

=== WEB –ò–ù–¢–ï–†–§–ï–ô–°–´ ===
Prometheus: http://$SERVER_IP:9090
Grafana: http://$SERVER_IP:3000 (admin/admin123!RTTI)
Alertmanager: http://$SERVER_IP:9093

=== –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò ===
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./02-install-prometheus.sh
2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä—ã: ./03-install-exporters.sh
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Grafana: ./04-configure-grafana.sh
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–ª–µ—Ä—Ç—ã: ./05-configure-alerts.sh

=== –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ ===
- –§–∞–π—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø–æ—Ä—Ç–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
EOF

echo
echo "‚úÖ –®–∞–≥ 1 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo "üìå –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
echo "üìå –†–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_ROLE ($SERVER_NAME)"
echo "üìå Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
echo "üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∫–∞—Ç–∞–ª–æ–≥–∏ —Å–æ–∑–¥–∞–Ω—ã"
echo "üìå –ë–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã"
echo "üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: /root/monitoring-system-info.txt"
echo "üìå –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: /opt/monitoring/monitoring-control.sh"
echo "üìå –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: ./02-install-prometheus.sh"
echo
