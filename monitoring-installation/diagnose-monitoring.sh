#!/bin/bash

# RTTI Monitoring System Diagnostics Script
# –ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                     Monitoring System Diagnostics                           ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo

echo "üìÖ –î–∞—Ç–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: $(date)"
echo "üñ•Ô∏è  –°–µ—Ä–≤–µ—Ä: $(hostname)"
echo "üåê IP –∞–¥—Ä–µ—Å: $(hostname -I | awk '{print $1}')"
echo

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    local service=$1
    local port=$2
    local description=$3
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ $description..."
    
    if systemctl is-active --quiet "$service"; then
        echo "‚úÖ $service: –ê–∫—Ç–∏–≤–µ–Ω"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
        if netstat -tlnp | grep ":$port " > /dev/null; then
            echo "‚úÖ –ü–æ—Ä—Ç $port: –û—Ç–∫—Ä—ã—Ç"
        else
            echo "‚ùå –ü–æ—Ä—Ç $port: –ó–∞–∫—Ä—ã—Ç"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞
        if curl -s "http://localhost:$port" > /dev/null; then
            echo "‚úÖ HTTP –æ—Ç–≤–µ—Ç: OK"
        else
            echo "‚ùå HTTP –æ—Ç–≤–µ—Ç: –ù–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        fi
    else
        echo "‚ùå $service: –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
    echo
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
echo "üîß –û–°–ù–û–í–ù–´–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

check_service "prometheus" "9090" "Prometheus Server"
check_service "grafana-server" "3000" "Grafana Dashboard"
check_service "alertmanager" "9093" "Alertmanager"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–µ—Ä–æ–≤
echo "üìä –≠–ö–°–ü–û–†–¢–ï–†–´ –ú–ï–¢–†–ò–ö"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

check_service "node_exporter" "9100" "Node Exporter (—Å–∏—Å—Ç–µ–º–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏)"

if systemctl is-active --quiet nginx; then
    check_service "nginx_exporter" "9113" "Nginx Exporter"
fi

if systemctl is-active --quiet postgresql; then
    check_service "postgres_exporter" "9187" "PostgreSQL Exporter"
fi

if systemctl is-active --quiet redis-server; then
    check_service "redis_exporter" "9121" "Redis Exporter"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
echo "‚öôÔ∏è  –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

# Prometheus
if [ -f "/etc/prometheus/prometheus.yml" ]; then
    echo "‚úÖ Prometheus config: –ù–∞–π–¥–µ–Ω"
    
    if promtool check config /etc/prometheus/prometheus.yml > /dev/null 2>&1; then
        echo "‚úÖ Prometheus config: –í–∞–ª–∏–¥–Ω—ã–π"
    else
        echo "‚ùå Prometheus config: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
        promtool check config /etc/prometheus/prometheus.yml 2>&1 | head -5
    fi
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–ª–µ–π
    TARGETS=$(grep -E "targets:" /etc/prometheus/prometheus.yml | wc -l)
    echo "üéØ –¶–µ–ª–µ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $TARGETS"
else
    echo "‚ùå Prometheus config: –ù–µ –Ω–∞–π–¥–µ–Ω"
fi

# Grafana
if [ -f "/etc/grafana/grafana.ini" ]; then
    echo "‚úÖ Grafana config: –ù–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    HTTP_PORT=$(grep "http_port" /etc/grafana/grafana.ini | cut -d'=' -f2 | xargs)
    DOMAIN=$(grep "domain" /etc/grafana/grafana.ini | cut -d'=' -f2 | xargs)
    
    echo "üåê Grafana –ø–æ—Ä—Ç: ${HTTP_PORT:-3000}"
    echo "üåç Grafana –¥–æ–º–µ–Ω: ${DOMAIN:-localhost}"
else
    echo "‚ùå Grafana config: –ù–µ –Ω–∞–π–¥–µ–Ω"
fi

# Alertmanager
if [ -f "/etc/alertmanager/alertmanager.yml" ]; then
    echo "‚úÖ Alertmanager config: –ù–∞–π–¥–µ–Ω"
    
    if amtool check-config /etc/alertmanager/alertmanager.yml > /dev/null 2>&1; then
        echo "‚úÖ Alertmanager config: –í–∞–ª–∏–¥–Ω—ã–π"
    else
        echo "‚ùå Alertmanager config: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"
    fi
else
    echo "‚ùå Alertmanager config: –ù–µ –Ω–∞–π–¥–µ–Ω"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
echo "üìä –î–ê–ù–ù–´–ï –ò –ú–ï–¢–†–ò–ö–ò"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

# Prometheus –¥–∞–Ω–Ω—ã–µ
if [ -d "/var/lib/prometheus" ]; then
    PROMETHEUS_SIZE=$(du -sh /var/lib/prometheus | awk '{print $1}')
    echo "üìà –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö Prometheus: $PROMETHEUS_SIZE"
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–∏–π
    if curl -s http://localhost:9090/api/v1/query?query=prometheus_tsdb_symbol_table_size_bytes > /dev/null; then
        SERIES_COUNT=$(curl -s "http://localhost:9090/api/v1/query?query=prometheus_tsdb_head_series" | jq -r '.data.result[0].value[1]' 2>/dev/null || echo "Unknown")
        echo "üìä –í—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä—è–¥–æ–≤: $SERIES_COUNT"
    fi
else
    echo "‚ùå –î–∞–Ω–Ω—ã–µ Prometheus –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# Grafana –¥–∞–Ω–Ω—ã–µ
if [ -d "/var/lib/grafana" ]; then
    GRAFANA_SIZE=$(du -sh /var/lib/grafana | awk '{print $1}')
    echo "üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö Grafana: $GRAFANA_SIZE"
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞—à–±–æ—Ä–¥–æ–≤
    if [ -f "/var/lib/grafana/grafana.db" ]; then
        DASHBOARD_COUNT=$(sqlite3 /var/lib/grafana/grafana.db "SELECT COUNT(*) FROM dashboard;" 2>/dev/null || echo "Unknown")
        echo "üìã –î–∞—à–±–æ—Ä–¥–æ–≤: $DASHBOARD_COUNT"
    fi
else
    echo "‚ùå –î–∞–Ω–Ω—ã–µ Grafana –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∏ —Ü–µ–ª–µ–π
echo "üéØ –¶–ï–õ–ò –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

if curl -s http://localhost:9090/api/v1/targets > /dev/null; then
    echo "üì° –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Ü–µ–ª–µ–π..."
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —á–µ—Ä–µ–∑ API
    TARGETS_JSON=$(curl -s http://localhost:9090/api/v1/targets)
    
    if command -v jq > /dev/null; then
        UP_TARGETS=$(echo "$TARGETS_JSON" | jq '.data.activeTargets[] | select(.health=="up") | .labels.instance' 2>/dev/null | wc -l)
        DOWN_TARGETS=$(echo "$TARGETS_JSON" | jq '.data.activeTargets[] | select(.health=="down") | .labels.instance' 2>/dev/null | wc -l)
        
        echo "‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ü–µ–ª–µ–π: $UP_TARGETS"
        echo "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ü–µ–ª–µ–π: $DOWN_TARGETS"
        
        if [ "$DOWN_TARGETS" -gt 0 ]; then
            echo "‚ö†Ô∏è  –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–ª–∏:"
            echo "$TARGETS_JSON" | jq -r '.data.activeTargets[] | select(.health=="down") | "   - " + .labels.instance + " (" + .labels.job + ")"' 2>/dev/null
        fi
    else
        echo "‚ÑπÔ∏è  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ jq –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ü–µ–ª–µ–π"
    fi
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ü–µ–ª–µ–π"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤
echo "üö® –°–ò–°–¢–ï–ú–ê –ê–õ–ï–†–¢–û–í"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

if curl -s http://localhost:9090/api/v1/rules > /dev/null; then
    RULES_JSON=$(curl -s http://localhost:9090/api/v1/rules)
    
    if command -v jq > /dev/null; then
        TOTAL_RULES=$(echo "$RULES_JSON" | jq '.data.groups[].rules | length' 2>/dev/null | awk '{sum+=$1} END {print sum}')
        ACTIVE_ALERTS=$(echo "$RULES_JSON" | jq '.data.groups[].rules[] | select(.type=="alerting" and .alerts) | .alerts | length' 2>/dev/null | awk '{sum+=$1} END {print sum}')
        
        echo "üìã –ü—Ä–∞–≤–∏–ª –∞–ª–µ—Ä—Ç–æ–≤: ${TOTAL_RULES:-0}"
        echo "üî• –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤: ${ACTIVE_ALERTS:-0}"
        
        if [ "${ACTIVE_ALERTS:-0}" -gt 0 ]; then
            echo "‚ö†Ô∏è  –ê–∫—Ç–∏–≤–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã:"
            echo "$RULES_JSON" | jq -r '.data.groups[].rules[] | select(.type=="alerting" and .alerts) | .alerts[] | "   - " + .labels.alertname + " (" + .state + ")"' 2>/dev/null
        fi
    fi
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∞–ª–µ—Ä—Ç–æ–≤"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Alertmanager
if curl -s http://localhost:9093/api/v1/status > /dev/null; then
    echo "‚úÖ Alertmanager API –¥–æ—Å—Ç—É–ø–µ–Ω"
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–ª–µ—Ä—Ç–æ–≤
    ALERTS_JSON=$(curl -s http://localhost:9093/api/v1/alerts)
    if command -v jq > /dev/null; then
        FIRING_ALERTS=$(echo "$ALERTS_JSON" | jq '.data[] | select(.status.state=="active")' 2>/dev/null | wc -l)
        echo "üî• –°—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏—Ö –∞–ª–µ—Ä—Ç–æ–≤: $FIRING_ALERTS"
    fi
else
    echo "‚ùå Alertmanager API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
echo "‚ö° –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏:"
ps aux | grep -E "(prometheus|grafana|alertmanager)" | grep -v grep | awk '{print "   " $11 ": " $4 "% RAM, " $3 "% CPU"}'

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
DISK_USAGE=$(df /var/lib | awk 'NR==2 {print $5}')
echo "üíΩ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ /var/lib: $DISK_USAGE"

# –°–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
PROMETHEUS_CONN=$(netstat -an | grep :9090 | grep ESTABLISHED | wc -l)
GRAFANA_CONN=$(netstat -an | grep :3000 | grep ESTABLISHED | wc -l)

echo "üåê –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ Prometheus: $PROMETHEUS_CONN"
echo "üåê –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ Grafana: $GRAFANA_CONN"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo "üìã –õ–û–ì–ò –ò –û–®–ò–ë–ö–ò"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö
echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ª–æ–≥–∞—Ö:"

for service in prometheus grafana-server alertmanager; do
    if systemctl is-active --quiet "$service"; then
        ERROR_COUNT=$(journalctl -u "$service" --since="24 hours ago" | grep -i error | wc -l)
        echo "   $service: $ERROR_COUNT –æ—à–∏–±–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞"
        
        if [ "$ERROR_COUNT" -gt 0 ]; then
            echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:"
            journalctl -u "$service" --since="24 hours ago" | grep -i error | tail -3 | sed 's/^/     /'
        fi
    fi
done
echo

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò"
echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –º–µ—Å—Ç–∞
AVAILABLE_SPACE=$(df /var/lib | awk 'NR==2 {print $4}')
TOTAL_SPACE=$(df /var/lib | awk 'NR==2 {print $2}')
USAGE_PERCENT=$(echo "scale=2; $AVAILABLE_SPACE * 100 / $TOTAL_SPACE" | bc 2>/dev/null || echo "Unknown")

if [ ! -z "$USAGE_PERCENT" ] && [ "$(echo "$USAGE_PERCENT > 90" | bc 2>/dev/null)" = "1" ]; then
    echo "‚ö†Ô∏è  –ú–∞–ª–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π
echo "üì¶ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
echo "   sudo ./update-monitoring.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–∞–ø–æ–≤
if [ -d "/var/backups/monitoring" ]; then
    LATEST_BACKUP=$(ls -t /var/backups/monitoring/monitoring_backup_*.tar.gz 2>/dev/null | head -1)
    if [ ! -z "$LATEST_BACKUP" ]; then
        BACKUP_AGE=$(stat -c %Y "$LATEST_BACKUP")
        CURRENT_TIME=$(date +%s)
        AGE_DAYS=$(( (CURRENT_TIME - BACKUP_AGE) / 86400 ))
        
        if [ "$AGE_DAYS" -gt 7 ]; then
            echo "‚ö†Ô∏è  –ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω $AGE_DAYS –¥–Ω–µ–π –Ω–∞–∑–∞–¥ - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π"
            echo "   sudo ./backup-monitoring.sh"
        else
            echo "‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω $AGE_DAYS –¥–Ω–µ–π –Ω–∞–∑–∞–¥"
        fi
    else
        echo "‚ö†Ô∏è  –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å:"
        echo "   sudo ./backup-monitoring.sh"
    fi
else
    echo "‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

echo
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                           –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞                             ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
echo "   üìä Grafana: http://$(hostname -I | awk '{print $1}'):3000"
echo "   üéØ Prometheus: http://$(hostname -I | awk '{print $1}'):9090"
echo "   üö® Alertmanager: http://$(hostname -I | awk '{print $1}'):9093"
echo
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   journalctl -u prometheus -f     # –õ–æ–≥–∏ Prometheus –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
echo "   journalctl -u grafana-server -f # –õ–æ–≥–∏ Grafana –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
echo "   promtool query instant 'up'     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ü–µ–ª–µ–π"
