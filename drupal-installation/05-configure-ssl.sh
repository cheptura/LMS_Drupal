#!/bin/bash

# RTTI Drupal - –®–∞–≥ 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL/TLS
# –°–µ—Ä–≤–µ—Ä: storage.omuzgorpro.tj (92.242.61.204)
# –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±—Ä–∞–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ www –¥–æ–º–µ–Ω–∞

echo "=== RTTI Drupal - –®–∞–≥ 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL/TLS –¥–ª—è storage.omuzgorpro.tj ==="
echo "üîí Let's Encrypt SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"
echo "üìÖ –î–∞—Ç–∞: $(date)"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root"
    exit 1
fi

DOMAIN="storage.omuzgorpro.tj"
EMAIL="admin@omuzgorpro.tj"

echo "1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot –¥–ª—è Let's Encrypt..."
apt install -y certbot python3-certbot-nginx

echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
nginx -t
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    exit 1
fi

echo "3. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ HTTP —Å–∞–π—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
mkdir -p /var/www/html
echo "<!DOCTYPE html><html><head><title>RTTI Digital Library</title></head><body><h1>RTTI Digital Library - SSL Setup</h1><p>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL...</p></body></html>" > /var/www/html/index.html

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è HTTP
cat > /etc/nginx/sites-available/drupal-temp << EOF
server {
    listen 80;
    server_name $DOMAIN;
    root /var/www/html;
    index index.html;
    
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
ln -sf /etc/nginx/sites-available/drupal-temp /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/drupal-default

echo "4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx..."
systemctl reload nginx

echo "5. –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –æ—Ç Let's Encrypt..."
certbot certonly \
    --nginx \
    --non-interactive \
    --agree-tos \
    --email $EMAIL \
    --domains $DOMAIN

if [ $? -eq 0 ]; then
    echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
    echo "1. DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è $DOMAIN (A-–∑–∞–ø–∏—Å—å –¥–æ–ª–∂–Ω–∞ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ $(hostname -I | awk '{print $1}'))"
    echo "2. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–∞ 80 (ufw allow 80/tcp)"
    echo "3. –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å email $EMAIL"
    echo "4. –õ–æ–≥–∏: /var/log/letsencrypt/letsencrypt.log"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏:"
    echo "certbot certonly --nginx --non-interactive --agree-tos --email $EMAIL --domains $DOMAIN"
    exit 1
fi

echo "6. –°–æ–∑–¥–∞–Ω–∏–µ HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx –¥–ª—è Drupal..."
cat > /etc/nginx/sites-available/drupal-ssl << EOF
# HTTP redirect to HTTPS
server {
    listen 80;
    server_name $DOMAIN;
    
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    location / {
        return 301 https://\$server_name\$request_uri;
    }
}

# HTTPS server for Drupal
server {
    listen 443 ssl http2;
    server_name $DOMAIN;
    
    root /var/www/drupal/web;
    index index.php;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/$DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DOMAIN/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; img-src 'self' data: https:; font-src 'self' data: https:;" always;
    
    # File upload size
    client_max_body_size 100M;
    
    # Drupal specific configurations
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    
    # Deny access to configuration files
    location ~ \..*/.*\.php$ {
        return 403;
    }
    
    location ~ ^/sites/.*/private/ {
        return 403;
    }
    
    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }
    
    location ~* ^/.well-known/ {
        allow all;
    }
    
    location ~ (^|/)\. {
        return 403;
    }
    
    # Drupal clean URLs
    location / {
        try_files \$uri /index.php?\$query_string;
    }
    
    location @rewrite {
        rewrite ^/(.*)$ /index.php?q=\$1;
    }
    
    # PHP processing
    location ~ \.php$ {
        try_files \$uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php/php8.3-fpm-drupal.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
        
        # Drupal specific parameters
        fastcgi_param PATH_INFO \$fastcgi_path_info;
        fastcgi_param PATH_TRANSLATED \$document_root\$fastcgi_path_info;
        fastcgi_param QUERY_STRING \$query_string;
        fastcgi_param REQUEST_METHOD \$request_method;
        fastcgi_param CONTENT_TYPE \$content_type;
        fastcgi_param CONTENT_LENGTH \$content_length;
        fastcgi_param HTTPS on;
        
        fastcgi_intercept_errors on;
        fastcgi_ignore_client_abort off;
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 180;
        fastcgi_read_timeout 180;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
    }
    
    # Static files caching and optimization
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
        log_not_found off;
        
        # Gzip compression for static assets
        gzip_static on;
    }
    
    # Deny access to vendor and other sensitive directories
    location ^~ /vendor/ {
        deny all;
        return 403;
    }
    
    location ^~ /core/ {
        deny all;
        return 403;
    }
    
    location ~* composer\.(json|lock)$ {
        deny all;
        return 403;
    }
    
    location ~* package\.json$ {
        deny all;
        return 403;
    }
    
    # Drupal file serving for private files
    location ^~ /system/files/ {
        try_files \$uri /index.php?\$query_string;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}
EOF

echo "7. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è SSL..."
rm -f /etc/nginx/sites-enabled/drupal-temp
ln -sf /etc/nginx/sites-available/drupal-ssl /etc/nginx/sites-enabled/

echo "8. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx..."
nginx -t
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    exit 1
fi

echo "9. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx..."
systemctl reload nginx

echo "10. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
cat > /etc/cron.d/certbot-renewal-drupal << 'EOF'
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Let's Encrypt —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è Drupal
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–≤–∞–∂–¥—ã –≤ –¥–µ–Ω—å
0 12 * * * root certbot renew --quiet --post-hook "systemctl reload nginx"
0 0 * * * root certbot renew --quiet --post-hook "systemctl reload nginx"
EOF

echo "11. –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
openssl x509 -in /etc/letsencrypt/live/$DOMAIN/fullchain.pem -text -noout | grep -A 3 "Validity"

echo "12. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HTTPS –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
curl -I https://$DOMAIN >/dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ HTTPS —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo "‚ö†Ô∏è  HTTPS –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
fi

echo "13. –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL..."
cat > /root/drupal-ssl-check.sh << EOF
#!/bin/bash
echo "=== Drupal SSL Certificate Status ==="
certbot certificates

echo -e "\n=== Certificate Expiry ==="
openssl x509 -in /etc/letsencrypt/live/$DOMAIN/fullchain.pem -noout -dates

echo -e "\n=== HTTPS Test ==="
curl -I https://$DOMAIN 2>/dev/null | head -3

echo -e "\n=== SSL Security Test ==="
echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ SSL –Ω–∞: https://www.ssllabs.com/ssltest/analyze.html?d=$DOMAIN"

echo -e "\n=== Nginx SSL Configuration ==="
nginx -T | grep -A 5 -B 5 ssl_certificate
EOF

chmod +x /root/drupal-ssl-check.sh

echo "14. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞ –¥–ª—è HTTPS..."
ufw allow 443/tcp comment "HTTPS Drupal"
ufw status

echo "15. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ SSL..."
cat > /root/drupal-ssl-info.txt << EOF
# SSL/TLS –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è Drupal
# –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: $(date)
# –°–µ—Ä–≤–µ—Ä: storage.omuzgorpro.tj ($(hostname -I | awk '{print $1}'))

–î–æ–º–µ–Ω: $DOMAIN
SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: Let's Encrypt
–ü—É—Ç—å –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É: /etc/letsencrypt/live/$DOMAIN/
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx: /etc/nginx/sites-available/drupal-ssl

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: certbot certificates
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: certbot renew
# –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: nginx -t
# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞: systemctl reload nginx

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: /root/drupal-ssl-check.sh

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
# - –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ cron
# - –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–æ–≥: /var/log/letsencrypt/letsencrypt.log
# - –ü—Ä–∏ —Å–º–µ–Ω–µ IP –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å DNS –∑–∞–ø–∏—Å–∏

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
# - HSTS –≤–∫–ª—é—á–µ–Ω (Strict-Transport-Security)
# - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ HTTP -> HTTPS
# - –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
# - CSP –ø–æ–ª–∏—Ç–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è Drupal

# –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:
# - HTTP/2 –≤–∫–ª—é—á–µ–Ω
# - Gzip —Å–∂–∞—Ç–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
# - –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
# - –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è Drupal

EOF

echo
echo "‚úÖ –®–∞–≥ 5 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo "üìå SSL/TLS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è https://$DOMAIN"
echo "üìå Let's Encrypt —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
echo "üìå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
echo "üìå HTTPS –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–µ–Ω"
echo "üìå Nginx –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Drupal"
echo "üìå –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: /root/drupal-ssl-check.sh"
echo "üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ SSL: /root/drupal-ssl-info.txt"
echo "üìå –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: ./06-install-drupal.sh"
echo
