#!/bin/bash

# RTTI Drupal - –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
# –°–µ—Ä–≤–µ—Ä: storage.omuzgorpro.tj (92.242.61.204)

echo "=== RTTI Drupal - –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ==="
echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é"
echo "üìÖ –î–∞—Ç–∞: $(date)"
echo

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root"
    exit 1
fi

DRUPAL_DIR="/var/www/drupal"
PHP_VERSION="8.3"
DOMAIN="storage.omuzgorpro.tj"
REPORT_FILE="/root/drupal-diagnostic-$(date +%Y%m%d-%H%M%S).txt"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
    echo "‚úÖ $1" >> $REPORT_FILE
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
    echo "‚ùå $1" >> $REPORT_FILE
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"
    echo "‚ö†Ô∏è $1" >> $REPORT_FILE
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"
    echo "‚ÑπÔ∏è $1" >> $REPORT_FILE
}

print_header() {
    echo -e "\n${BLUE}=== $1 ===${NC}"
    echo -e "\n=== $1 ===" >> $REPORT_FILE
}

print_recommendation() {
    echo -e "${YELLOW}üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: $1${NC}"
    echo "üîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: $1" >> $REPORT_FILE
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
echo "=== RTTI Drupal - –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç ===" > $REPORT_FILE
echo "–î–∞—Ç–∞: $(date)" >> $REPORT_FILE
echo "–°–µ—Ä–≤–µ—Ä: $DOMAIN ($(hostname -I | awk '{print $1}'))" >> $REPORT_FILE
echo "" >> $REPORT_FILE

# –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º
declare -a CRITICAL_ISSUES=()
declare -a WARNINGS=()
declare -a RECOMMENDATIONS=()

print_header "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"
print_info "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $(lsb_release -d | cut -f2)"
print_info "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $(uname -m)"
print_info "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: $(uptime -p)"

print_header "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
IP_ADDRESS=$(hostname -I | awk '{print $1}')
print_success "IP –∞–¥—Ä–µ—Å: $IP_ADDRESS"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
if nslookup $DOMAIN >/dev/null 2>&1; then
    DNS_IP=$(nslookup $DOMAIN | grep 'Address:' | tail -1 | awk '{print $2}')
    print_success "DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥: $DOMAIN -> $DNS_IP"
else
    print_error "DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è $DOMAIN"
    CRITICAL_ISSUES+=("DNS —Ä–µ–∑–æ–ª–≤–∏–Ω–≥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    RECOMMENDATIONS+=("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å—å –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN")
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤:"
PORTS_TO_CHECK=(22 80 443 5432 6379)
PORT_NAMES=("SSH" "HTTP" "HTTPS" "PostgreSQL" "Redis")

for i in "${!PORTS_TO_CHECK[@]}"; do
    port=${PORTS_TO_CHECK[$i]}
    name=${PORT_NAMES[$i]}
    
    if netstat -tlnp | grep ":$port " >/dev/null 2>&1; then
        print_success "–ü–æ—Ä—Ç $port ($name): –æ—Ç–∫—Ä—ã—Ç"
    else
        if [[ "$port" == "80" || "$port" == "443" ]]; then
            print_error "–ü–æ—Ä—Ç $port ($name): –∑–∞–∫—Ä—ã—Ç"
            CRITICAL_ISSUES+=("–í–µ–±-–ø–æ—Ä—Ç $port –∑–∞–∫—Ä—ã—Ç")
            if [ "$port" == "80" ]; then
                RECOMMENDATIONS+=("–ó–∞–ø—É—Å—Ç–∏—Ç–µ Nginx: systemctl start nginx")
            fi
        else
            print_warning "–ü–æ—Ä—Ç $port ($name): –∑–∞–∫—Ä—ã—Ç"
            WARNINGS+=("–ü–æ—Ä—Ç $port –∑–∞–∫—Ä—ã—Ç")
        fi
    fi
done

print_header "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ (Nginx)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Nginx
if systemctl is-active --quiet nginx; then
    print_success "Nginx: –∞–∫—Ç–∏–≤–µ–Ω"
    nginx_version=$(nginx -v 2>&1 | cut -d/ -f2)
    print_info "–í–µ—Ä—Å–∏—è Nginx: $nginx_version"
else
    print_error "Nginx: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    CRITICAL_ISSUES+=("Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    RECOMMENDATIONS+=("–ó–∞–ø—É—Å—Ç–∏—Ç–µ Nginx: systemctl start nginx && systemctl enable nginx")
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
if nginx -t &> /dev/null; then
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx: –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    print_error "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx: —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏"
    CRITICAL_ISSUES+=("–û—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx")
    RECOMMENDATIONS+=("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: nginx -t && journalctl -u nginx.service")
    RECOMMENDATIONS+=("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: ./fix-issues.sh")
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
if [ -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
    cert_expiry=$(openssl x509 -enddate -noout -in "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" | cut -d= -f2)
    print_success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–∏—Å—Ç–µ–∫–∞–µ—Ç: $cert_expiry)"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
    end_timestamp=$(date -d "$cert_expiry" +%s)
    current_timestamp=$(date +%s)
    days_left=$(( (end_timestamp - current_timestamp) / 86400 ))
    
    if [ $days_left -lt 30 ]; then
        print_warning "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ $days_left –¥–Ω–µ–π"
        WARNINGS+=("SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á–µ—Ç")
        RECOMMENDATIONS+=("–û–±–Ω–æ–≤–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: certbot renew")
    fi
else
    print_warning "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: –Ω–µ –Ω–∞–π–¥–µ–Ω"
    WARNINGS+=("SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    RECOMMENDATIONS+=("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: ./05-configure-ssl.sh")
fi

print_header "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP-FPM
if systemctl is-active --quiet php8.3-fpm; then
    print_success "PHP-FPM: –∞–∫—Ç–∏–≤–µ–Ω"
else
    print_error "PHP-FPM: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    CRITICAL_ISSUES+=("PHP-FPM –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    RECOMMENDATIONS+=("–ó–∞–ø—É—Å—Ç–∏—Ç–µ PHP-FPM: systemctl start php8.3-fpm && systemctl enable php8.3-fpm")
fi

print_info "–í–µ—Ä—Å–∏—è PHP: $(php --version | head -1 | awk '{print $2}')"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP –º–æ–¥—É–ª–µ–π
print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ PHP –º–æ–¥—É–ª–µ–π:"
REQUIRED_MODULES=("pdo_pgsql" "gd" "curl" "zip" "xml" "mbstring" "opcache" "redis")

for module in "${REQUIRED_MODULES[@]}"; do
    if php -m | grep -qi "$module"; then
        print_success "$module: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        if [ "$module" == "opcache" ]; then
            print_error "$module: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            CRITICAL_ISSUES+=("OPcache –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            RECOMMENDATIONS+=("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ OPcache: apt install php8.3-opcache")
            RECOMMENDATIONS+=("–ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ./fix-issues.sh")
        else
            print_warning "$module: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            WARNINGS+=("PHP –º–æ–¥—É–ª—å $module –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            RECOMMENDATIONS+=("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–¥—É–ª—å: apt install php8.3-$module")
        fi
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PHP-FPM –ø—É–ª–∞
if [ -f "/etc/php/8.3/fpm/pool.d/drupal.conf" ]; then
    print_success "PHP-FPM –ø—É–ª Drupal: –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∫–µ—Ç–∞
    if [ -S "/run/php/php8.3-fpm-drupal.sock" ]; then
        print_success "PHP-FPM —Å–æ–∫–µ—Ç: –∞–∫—Ç–∏–≤–µ–Ω"
    else
        print_error "PHP-FPM —Å–æ–∫–µ—Ç: –Ω–µ –Ω–∞–π–¥–µ–Ω"
        CRITICAL_ISSUES+=("PHP-FPM —Å–æ–∫–µ—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω")
        RECOMMENDATIONS+=("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ PHP-FPM: systemctl restart php8.3-fpm")
    fi
else
    print_error "PHP-FPM –ø—É–ª Drupal: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    CRITICAL_ISSUES+=("PHP-FPM –ø—É–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    RECOMMENDATIONS+=("–°–æ–∑–¥–∞–π—Ç–µ –ø—É–ª: ./fix-issues.sh")
fi

print_header "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (PostgreSQL)"

if systemctl is-active --quiet postgresql; then
    print_success "PostgreSQL: –∞–∫—Ç–∏–≤–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏
    pg_version=$(sudo -u postgres psql -t -c "SELECT version();" | head -1 | awk '{print $2}')
    print_info "–í–µ—Ä—Å–∏—è PostgreSQL: $pg_version"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw drupal_library; then
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö drupal_library: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if sudo -u postgres psql -d drupal_library -c "SELECT 1;" &> /dev/null; then
            print_success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö drupal_library: –¥–æ—Å—Ç—É–ø–Ω–∞"
        else
            print_error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö drupal_library: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
            CRITICAL_ISSUES+=("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            RECOMMENDATIONS+=("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        fi
    else
        print_error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö drupal_library: –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        CRITICAL_ISSUES+=("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω–∞")
        RECOMMENDATIONS+=("–°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: ./03-install-database.sh")
    fi
else
    print_error "PostgreSQL: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    CRITICAL_ISSUES+=("PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    RECOMMENDATIONS+=("–ó–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL: systemctl start postgresql && systemctl enable postgresql")
fi

print_header "6. –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis"

if systemctl is-active --quiet redis-server; then
    print_success "Redis: –∞–∫—Ç–∏–≤–µ–Ω"
    
    if redis-cli ping &> /dev/null; then
        print_success "Redis: –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
    else
        print_error "Redis: –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
        WARNINGS+=("Redis –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
        RECOMMENDATIONS+=("–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Redis: systemctl restart redis-server")
    fi
else
    print_warning "Redis: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    WARNINGS+=("Redis –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    RECOMMENDATIONS+=("–ó–∞–ø—É—Å—Ç–∏—Ç–µ Redis: systemctl start redis-server && systemctl enable redis-server")
fi

print_header "7. –ü—Ä–æ–≤–µ—Ä–∫–∞ Drupal"

if [ -d "$DRUPAL_DIR" ] && [ -f "$DRUPAL_DIR/web/index.php" ]; then
    print_success "Drupal —Ñ–∞–π–ª—ã: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if [ "$(stat -c %U $DRUPAL_DIR)" == "www-data" ]; then
        print_success "–ü—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª—ã Drupal: –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ"
    else
        print_warning "–ü—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª—ã Drupal: —Ç—Ä–µ–±—É—é—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
        WARNINGS+=("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª—ã Drupal")
        RECOMMENDATIONS+=("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∞: chown -R www-data:www-data $DRUPAL_DIR")
    fi
else
    print_error "Drupal —Ñ–∞–π–ª—ã: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    CRITICAL_ISSUES+=("Drupal –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    RECOMMENDATIONS+=("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Drupal: ./06-install-drupal.sh")
fi

print_header "8. –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP/HTTPS –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"

# –¢–µ—Å—Ç HTTP
if curl -s -o /dev/null http://localhost/ 2>/dev/null; then
    http_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/ 2>/dev/null)
    if [ "$http_status" == "200" ] || [ "$http_status" == "301" ] || [ "$http_status" == "302" ]; then
        print_success "HTTP: —Å–∞–π—Ç –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥ $http_status)"
    else
        print_warning "HTTP: —Å–∞–π—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º $http_status"
        WARNINGS+=("HTTP –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ $http_status")
    fi
else
    print_error "HTTP: —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    CRITICAL_ISSUES+=("HTTP –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    RECOMMENDATIONS+=("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ Nginx –∏ Drupal –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
fi

# –¢–µ—Å—Ç HTTPS
if curl -k -s -o /dev/null https://localhost/ 2>/dev/null; then
    https_status=$(curl -k -s -o /dev/null -w "%{http_code}" https://localhost/ 2>/dev/null)
    if [ "$https_status" == "200" ]; then
        print_success "HTTPS: —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥ $https_status)"
    else
        print_warning "HTTPS: —Å–∞–π—Ç –æ—Ç–≤–µ—á–∞–µ—Ç —Å –∫–æ–¥–æ–º $https_status"
        WARNINGS+=("HTTPS –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ $https_status")
    fi
else
    print_error "HTTPS: —Å–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    WARNINGS+=("HTTPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    RECOMMENDATIONS+=("–ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL: ./05-configure-ssl.sh")
fi

print_header "9. –°–≤–æ–¥–∫–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"

# –ü–æ–¥—Å—á–µ—Ç –ø—Ä–æ–±–ª–µ–º
CRITICAL_COUNT=${#CRITICAL_ISSUES[@]}
WARNING_COUNT=${#WARNINGS[@]}
RECOMMENDATION_COUNT=${#RECOMMENDATIONS[@]}

echo
if [ $CRITICAL_COUNT -eq 0 ] && [ $WARNING_COUNT -eq 0 ]; then
    print_success "–°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –û–¢–õ–ò–ß–ù–û!"
    print_info "–í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
elif [ $CRITICAL_COUNT -eq 0 ]; then
    print_warning "–°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –•–û–†–û–®–û"
    print_info "–ï—Å—Ç—å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNING_COUNT"
else
    print_error "–°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø"
    print_info "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: $CRITICAL_COUNT"
    print_info "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNING_COUNT"
fi

echo
print_info "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º:"
echo "   üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ: $CRITICAL_COUNT"
echo "   üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: $WARNING_COUNT"
echo "   üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: $RECOMMENDATION_COUNT"

if [ $CRITICAL_COUNT -gt 0 ]; then
    echo
    print_error "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:"
    for issue in "${CRITICAL_ISSUES[@]}"; do
        echo "   ‚ùå $issue"
        echo "   ‚ùå $issue" >> $REPORT_FILE
    done
fi

if [ $WARNING_COUNT -gt 0 ]; then
    echo
    print_warning "–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:"
    for warning in "${WARNINGS[@]}"; do
        echo "   ‚ö†Ô∏è  $warning"
        echo "   ‚ö†Ô∏è  $warning" >> $REPORT_FILE
    done
fi

if [ $RECOMMENDATION_COUNT -gt 0 ]; then
    echo
    print_header "–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ"
    for i in "${!RECOMMENDATIONS[@]}"; do
        echo "   $((i+1)). ${RECOMMENDATIONS[$i]}"
        echo "   $((i+1)). ${RECOMMENDATIONS[$i]}" >> $REPORT_FILE
    done
fi

print_header "10. –ë—ã—Å—Ç—Ä—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è"

echo "üöÄ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ë–´–°–¢–†–û–ì–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:"
echo

if [ $CRITICAL_COUNT -gt 0 ]; then
    echo "# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º:"
    echo "cd $(pwd)"
    echo "./fix-issues.sh  # –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç Nginx, PHP, OPcache"
    echo
fi

echo "# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤:"
echo "systemctl restart nginx php8.3-fpm postgresql redis-server"
echo "systemctl enable nginx php8.3-fpm postgresql redis-server"
echo

echo "# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
echo "systemctl status nginx php8.3-fpm postgresql redis-server"
echo

echo "# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
echo "nginx -t"
echo "php -m | grep opcache"
echo

print_header "11. –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏"

echo "üìã –ü–õ–ê–ù –î–ï–ô–°–¢–í–ò–ô:"
echo

if [ $CRITICAL_COUNT -gt 0 ]; then
    echo "1. ‚ùó –°–†–û–ß–ù–û: –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"
    echo "   ./fix-issues.sh"
    echo
fi

echo "2. üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞:"
echo "   curl -I http://$DOMAIN/"
echo "   curl -I https://$DOMAIN/"
echo

echo "3. üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
echo "   http://$IP_ADDRESS/phpinfo.php (–ª–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç)"
echo "   https://$DOMAIN/ (–ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø)"
echo

echo "4. üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   tail -f /var/log/nginx/error.log"
echo "   journalctl -u nginx.service -f"
echo

echo "5. üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É:"
echo "   ./10-final-check-improved.sh"
echo

print_header "12. –§–∞–π–ª—ã –æ—Ç—á–µ—Ç–æ–≤"

echo "üìÅ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $REPORT_FILE"
echo "üìÅ –õ–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã:"
echo "   /var/log/nginx/error.log"
echo "   /var/log/php8.3-fpm.log"
echo "   /var/log/postgresql/postgresql-*-main.log"
echo

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
echo
echo "=== –§–ò–ù–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–° ===" >> $REPORT_FILE
echo "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: $CRITICAL_COUNT" >> $REPORT_FILE
echo "–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNING_COUNT" >> $REPORT_FILE
echo "–î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: $(date)" >> $REPORT_FILE

if [ $CRITICAL_COUNT -eq 0 ] && [ $WARNING_COUNT -le 2 ]; then
    echo "–°–¢–ê–¢–£–°: –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï ‚úÖ" >> $REPORT_FILE
    echo
    print_success "–°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!"
    exit 0
elif [ $CRITICAL_COUNT -eq 0 ]; then
    echo "–°–¢–ê–¢–£–°: –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–ê ‚ö†Ô∏è" >> $REPORT_FILE
    echo
    print_warning "–°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–ê, –ù–û –ï–°–¢–¨ –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø"
    exit 1
else
    echo "–°–¢–ê–¢–£–°: –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï ‚ùå" >> $REPORT_FILE
    echo
    print_error "–°–ò–°–¢–ï–ú–ê –¢–†–ï–ë–£–ï–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ö–†–ò–¢–ò–ß–ï–°–ö–ò–• –ü–†–û–ë–õ–ï–ú"
    exit 2
fi
